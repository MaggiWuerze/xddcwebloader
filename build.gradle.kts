/*
 * This file was generated by the Gradle "init" task.
 */

plugins {
    java
    `maven-publish`
}

repositories {
    mavenCentral()
    maven { url = uri("https://jitpack.io") }
}

dependencies {
    //SPRING
    implementation("org.springframework.boot:spring-boot-starter-data-rest:2.5.4")
    implementation("org.springframework.boot:spring-boot-starter-security:2.5.4")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf:2.5.4")
    implementation("org.springframework.boot:spring-boot-starter-web:2.5.4")
    implementation("org.springframework.boot:spring-boot-starter-tomcat:2.5.4")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:2.5.4")
    implementation("org.springframework.boot:spring-boot-devtools:2.5.4")
    implementation("org.springframework.boot:spring-boot-starter-websocket:2.5.4")
    implementation("org.springframework.boot:spring-boot-starter-validation:2.5.4")
    testImplementation("org.springframework.boot:spring-boot-starter-test:2.5.4")

    //LOMBOK
    compileOnly( "org.projectlombok:lombok:1.18.20")
    annotationProcessor ("org.projectlombok:lombok:1.18.20")
    testCompileOnly ("org.projectlombok:lombok:1.18.20")
    testAnnotationProcessor ("org.projectlombok:lombok:1.18.20")

    //DATABASE
    implementation("org.postgresql:postgresql:42.2.23.jre7")
    implementation("mysql:mysql-connector-java:8.0.25")
    runtimeOnly("com.h2database:h2:1.4.200")

    //UTILS
    implementation("com.github.pircbotx:pircbotx:master-SNAPSHOT")
    implementation("commons-io:commons-io:2.11.0")

    //WEBJARS
    implementation("org.webjars:webjars-locator-core:0.48")
    implementation("org.webjars:jquery:3.6.0")
    implementation("org.webjars:bootstrap:5.1.0")
    implementation("org.webjars:font-awesome:5.15.3")
}

group = "de.maggiwuerze"
version = "0.5.0-SNAPSHOT"
description = "xdccloader"
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
}
